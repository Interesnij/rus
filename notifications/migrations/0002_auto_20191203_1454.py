# Generated by Django 2.2.5 on 2019-12-03 14:54

from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('communities', '0002_auto_20191130_1403'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('notifications', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GoodCommunityNotification',
            fields=[
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Создано')),
                ('unread', models.BooleanField(db_index=True, default=True)),
                ('verb', models.CharField(choices=[('PC', 'оставил комментарий к товару сообщества'), ('PCR', 'ответил на комментарий к товару сообщества'), ('L', 'понравился товар сообщества'), ('D', 'не понравился товар сообщества'), ('LC', 'понравился комментарий к товару сообщества'), ('DC', 'не понравился комментарий к товару сообщества'), ('LRC', 'понравился ответ на комментарий к товару сообщества'), ('DRC', 'не понравился ответ к комментарий к товару сообщества'), ('R', 'поделился товаром сообщества')], max_length=5, verbose_name='Тип уведомления')),
                ('slug', models.SlugField(blank=True, max_length=210, null=True)),
                ('uuid_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Инициатор')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='good_community_notifications', to='communities.Community', verbose_name='Сообщество')),
            ],
            options={
                'verbose_name_plural': 'Уведомления сообщества',
                'verbose_name': 'Уведомление сообщества',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='GoodNotification',
            fields=[
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Создано')),
                ('unread', models.BooleanField(db_index=True, default=True)),
                ('verb', models.CharField(choices=[('PC', 'оставил комментарий к товару'), ('PCR', 'ответил на Ваш комментарий к товару'), ('L', 'понравился Ваш товар'), ('D', 'не понравился Ваш товар'), ('LC', 'понравился Ваш комментарий к товару'), ('DC', 'не понравился Ваш комментарий к товару'), ('LRC', 'понравился Ваш ответ на комментарий к товару'), ('DRC', 'не понравился Ваш ответ к комментарий к товару'), ('R', 'поделился Вашим товаром')], max_length=5, verbose_name='Тип уведомления')),
                ('slug', models.SlugField(blank=True, max_length=210, null=True)),
                ('uuid_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Инициатор')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='good_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Получатель')),
            ],
            options={
                'verbose_name_plural': 'Уведомления',
                'verbose_name': 'Уведомление',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ItemCommunityNotification',
            fields=[
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Создано')),
                ('unread', models.BooleanField(db_index=True, default=True)),
                ('verb', models.CharField(choices=[('PC', 'оставил комментарий к записи сообщества'), ('PCR', 'ответил на комментарий к записи сообщества'), ('PUM', 'упомянул сообщество в записи'), ('PCUM', 'упомянул сообщество в комментарии к записи'), ('L', 'понравилась запись сообщества'), ('D', 'не понравилась запись сообщества'), ('LC', 'понравился комментарий в сообществе'), ('DC', 'не понравился комментарий в сообществе'), ('LRC', 'понравился ответ на комментарий в сообществе'), ('DRC', 'не понравился ответ к комментарий в сообществе'), ('R', 'поделился записью сообщества')], max_length=5, verbose_name='Тип уведомления')),
                ('slug', models.SlugField(blank=True, max_length=210, null=True)),
                ('uuid_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Инициатор')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_community_notifications', to='communities.Community', verbose_name='Сообщество')),
            ],
            options={
                'verbose_name_plural': 'Уведомления сообщества',
                'verbose_name': 'Уведомление сообщества',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ItemNotification',
            fields=[
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Создано')),
                ('unread', models.BooleanField(db_index=True, default=True)),
                ('verb', models.CharField(choices=[('PC', 'оставил комментарий к записи'), ('PCR', 'ответил на Ваш комментарий к записи'), ('PUM', 'упомянул Вас в записи'), ('PCUM', 'упомянул Вас в комментарии к записи'), ('L', 'понравилась Ваша запись'), ('D', 'не понравилась Ваша запись'), ('LC', 'понравился Ваш комментарий к записи'), ('DC', 'не понравился Ваш комментарий к записи'), ('LRC', 'понравился Ваш ответ на комментарий  к записи'), ('DRC', 'не понравился Ваш ответ к комментарий к записи'), ('R', 'поделился Вашей записью')], max_length=5, verbose_name='Тип уведомления')),
                ('slug', models.SlugField(blank=True, max_length=210, null=True)),
                ('uuid_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Инициатор')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Получатель')),
            ],
            options={
                'verbose_name_plural': 'Уведомления',
                'verbose_name': 'Уведомление',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PhotoCommunityNotification',
            fields=[
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Создано')),
                ('unread', models.BooleanField(db_index=True, default=True)),
                ('verb', models.CharField(choices=[('PC', 'оставил комментарий к изображению сообщества'), ('PCR', 'ответил на комментарий к изображению сообщества'), ('L', 'понравилось изображение сообщества'), ('D', 'не понравилось изображение сообщества'), ('LC', 'понравился комментарий к изображению сообщества'), ('DC', 'не понравился комментарий к изображению сообщества'), ('LRC', 'понравился ответ на комментарий к изображению сообщества'), ('DRC', 'не понравился ответ к комментарий к изображению сообщества'), ('R', 'поделился изображением сообщества')], max_length=5, verbose_name='Тип уведомления')),
                ('slug', models.SlugField(blank=True, max_length=210, null=True)),
                ('uuid_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Инициатор')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_community_notifications', to='communities.Community', verbose_name='Сообщество')),
            ],
            options={
                'verbose_name_plural': 'Уведомления сообщества',
                'verbose_name': 'Уведомление сообщества',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PhotoNotification',
            fields=[
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Создано')),
                ('unread', models.BooleanField(db_index=True, default=True)),
                ('verb', models.CharField(choices=[('PC', 'оставил комментарий к изображению'), ('PCR', 'ответил на Ваш комментарий к изображению'), ('L', 'понравилось Ваше изображение'), ('D', 'не понравилось Ваше изображение'), ('LC', 'понравился Ваш комментарий к изображению'), ('DC', 'не понравился Ваш комментарий к изображению'), ('LRC', 'понравился Ваш ответ на комментарий к изображению'), ('DRC', 'не понравился Ваш ответ к комментарий к изображению'), ('R', 'поделился Вашим изображением')], max_length=5, verbose_name='Тип уведомления')),
                ('slug', models.SlugField(blank=True, max_length=210, null=True)),
                ('uuid_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Инициатор')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Получатель')),
            ],
            options={
                'verbose_name_plural': 'Уведомления',
                'verbose_name': 'Уведомление',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserCommunityNotification',
            fields=[
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Создано')),
                ('unread', models.BooleanField(db_index=True, default=True)),
                ('verb', models.CharField(choices=[('CR', 'подал заявку в сообщество'), ('CC', 'заявка в сообщество одобрено'), ('CI', 'пригласил сообщество в сообщество'), ('J', 'вступил в сообщество')], max_length=5, verbose_name='Тип уведомления')),
                ('slug', models.SlugField(blank=True, max_length=210, null=True)),
                ('uuid_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Инициатор')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_notifications', to='communities.Community', verbose_name='Сообщество')),
            ],
            options={
                'verbose_name_plural': 'Уведомления сообщества',
                'verbose_name': 'Уведомление сообщества',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Создано')),
                ('unread', models.BooleanField(db_index=True, default=True)),
                ('verb', models.CharField(choices=[('CR', 'подал заявку в друзья'), ('CC', 'подтвердил, что он Ваш друг'), ('CI', 'пригласил Вас в сообщество')], max_length=5, verbose_name='Тип уведомления')),
                ('slug', models.SlugField(blank=True, max_length=210, null=True)),
                ('uuid_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Инициатор')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Получатель')),
            ],
            options={
                'verbose_name_plural': 'Уведомления',
                'verbose_name': 'Уведомление',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.RemoveField(
            model_name='notification',
            name='action_object_content_type',
        ),
        migrations.RemoveField(
            model_name='notification',
            name='actor',
        ),
        migrations.RemoveField(
            model_name='notification',
            name='recipient',
        ),
        migrations.DeleteModel(
            name='CommunityNotification',
        ),
        migrations.DeleteModel(
            name='Notification',
        ),
        migrations.AddIndex(
            model_name='usernotification',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['timestamp'], name='notificatio_timesta_d0447f_brin'),
        ),
        migrations.AddIndex(
            model_name='usercommunitynotification',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['timestamp'], name='notificatio_timesta_137ce9_brin'),
        ),
        migrations.AddIndex(
            model_name='photonotification',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['timestamp'], name='notificatio_timesta_cb4aea_brin'),
        ),
        migrations.AddIndex(
            model_name='photocommunitynotification',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['timestamp'], name='notificatio_timesta_f12c2c_brin'),
        ),
        migrations.AddIndex(
            model_name='itemnotification',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['timestamp'], name='notificatio_timesta_64b469_brin'),
        ),
        migrations.AddIndex(
            model_name='itemcommunitynotification',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['timestamp'], name='notificatio_timesta_d763c8_brin'),
        ),
        migrations.AddIndex(
            model_name='goodnotification',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['timestamp'], name='notificatio_timesta_c897a9_brin'),
        ),
        migrations.AddIndex(
            model_name='goodcommunitynotification',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['timestamp'], name='notificatio_timesta_b200e1_brin'),
        ),
    ]
