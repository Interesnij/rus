# Generated by Django 3.1.5 on 2021-03-11 13:38

from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import gallery.helpers
import imagekit.models.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('communities', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, verbose_name='uuid')),
                ('title', models.CharField(max_length=250, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('is_public', models.BooleanField(default=True, verbose_name='Виден другим')),
                ('type', models.CharField(choices=[('AV', 'Фото со страницы'), ('WA', 'Фото со стены'), ('MA', 'Основной альбом'), ('AL', 'Пользовательский альбом')], default='MA', max_length=5, verbose_name='Тип альбома')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удален')),
                ('communities', models.ManyToManyField(blank=True, related_name='communities_photolist', to='communities.Community')),
                ('community', models.ForeignKey(blank=True, db_index=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='album_community', to='communities.community', verbose_name='Сообщество')),
            ],
            options={
                'verbose_name': 'Фотоальбом',
                'verbose_name_plural': 'Фотоальбомы',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, verbose_name='uuid')),
                ('file', imagekit.models.fields.ProcessedImageField(upload_to=gallery.helpers.upload_to_photo_directory)),
                ('preview', imagekit.models.fields.ProcessedImageField(upload_to=gallery.helpers.upload_to_photo_directory)),
                ('description', models.TextField(blank=True, max_length=250, null=True, verbose_name='Описание')),
                ('is_public', models.BooleanField(default=True, verbose_name='Виден другим')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удален')),
                ('comments_enabled', models.BooleanField(default=True, verbose_name='Разрешить комментарии')),
                ('votes_on', models.BooleanField(default=True, verbose_name='Реакции разрешены')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('album', models.ManyToManyField(blank=True, related_name='photo_album', to='gallery.Album')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_creator', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='PhotoComment',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('is_edited', models.BooleanField(default=False, verbose_name='Изменено')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удаено')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('attach', models.CharField(blank=True, max_length=200, verbose_name='Прикрепленные элементы')),
                ('commenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Комментатор')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photo_comment_replies', to='gallery.photocomment', verbose_name='Родительский комментарий')),
                ('photo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gallery.photo')),
            ],
            options={
                'verbose_name': 'комментарий к записи',
                'verbose_name_plural': 'комментарии к записи',
            },
        ),
        migrations.AddField(
            model_name='album',
            name='cover_photo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='gallery.photo', verbose_name='Обожка'),
        ),
        migrations.AddField(
            model_name='album',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_album_creator', to=settings.AUTH_USER_MODEL, verbose_name='Создатель'),
        ),
        migrations.AddField(
            model_name='album',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='users_photolist', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='photocomment',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='gallery_pho_created_7ebd02_brin'),
        ),
        migrations.AddIndex(
            model_name='photo',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='gallery_pho_created_389e41_brin'),
        ),
        migrations.AddIndex(
            model_name='album',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='gallery_alb_created_8f2540_brin'),
        ),
    ]
