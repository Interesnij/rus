# Generated by Django 3.1 on 2020-08-24 19:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('communities', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ModeratedAudio',
            fields=[
                ('description', models.TextField(blank=True, max_length=300, verbose_name='Описание')),
                ('verified', models.BooleanField(default=False, verbose_name='Проверено')),
                ('status', models.CharField(choices=[('P', 'Трек рассматривается'), ('D', 'Трек удален'), ('R', 'Трек отвергнут')], default='P', max_length=5, verbose_name='Статус')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Проверяемый трек',
                'verbose_name_plural': 'Проверяемые треки',
            },
        ),
        migrations.CreateModel(
            name='ModeratedCommunity',
            fields=[
                ('description', models.TextField(blank=True, max_length=300, verbose_name='Описание')),
                ('verified', models.BooleanField(default=False, verbose_name='Проверено')),
                ('status', models.CharField(choices=[('P', 'На рассмотрении'), ('S', 'Объект заморожен'), ('B', 'Объект заблокирован'), ('BG', 'Объекту присвоен баннер'), ('R', 'Отвергнутый')], default='P', max_length=5, verbose_name='Статус')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('community', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='moderated_community', to='communities.community', verbose_name='Сообщество')),
            ],
            options={
                'verbose_name': 'Проверяемое сообщество',
                'verbose_name_plural': 'Проверяемые сообщества',
            },
        ),
        migrations.CreateModel(
            name='ModeratedGood',
            fields=[
                ('description', models.TextField(blank=True, max_length=300, verbose_name='Описание')),
                ('verified', models.BooleanField(default=False, verbose_name='Проверено')),
                ('status', models.CharField(choices=[('P', 'Товар рассматривается'), ('D', 'Товар удален'), ('R', 'Товар отвергнут')], default='P', max_length=5, verbose_name='Статус')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Проверяемый товар',
                'verbose_name_plural': 'Проверяемые товар',
            },
        ),
        migrations.CreateModel(
            name='ModeratedGoodComment',
            fields=[
                ('description', models.TextField(blank=True, max_length=300, verbose_name='Описание')),
                ('verified', models.BooleanField(default=False, verbose_name='Проверено')),
                ('status', models.CharField(choices=[('P', 'Товар рассматривается'), ('D', 'Товар удален'), ('R', 'Товар отвергнут')], default='P', max_length=5, verbose_name='Статус')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Проверяемый комментарий к товару',
                'verbose_name_plural': 'Проверяемые комментарии к товару',
            },
        ),
        migrations.CreateModel(
            name='ModeratedPhoto',
            fields=[
                ('description', models.TextField(blank=True, max_length=300, verbose_name='Описание')),
                ('verified', models.BooleanField(default=False, verbose_name='Проверено')),
                ('status', models.CharField(choices=[('P', 'Фотография рассматривается'), ('D', 'Фотография удалена'), ('R', 'Фотография отвергнута')], default='P', max_length=5, verbose_name='Статус')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Проверяемая фотография',
                'verbose_name_plural': 'Проверяемые фотографии',
            },
        ),
        migrations.CreateModel(
            name='ModeratedPhotoComment',
            fields=[
                ('description', models.TextField(blank=True, max_length=300, verbose_name='Описание')),
                ('verified', models.BooleanField(blank=True, default=False, verbose_name='Проверено')),
                ('status', models.CharField(choices=[('P', 'Фотография рассматривается'), ('D', 'Фотография удалена'), ('R', 'Фотография отвергнута')], default='P', max_length=5, verbose_name='Статус')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Проверяемый комментарий к фотографии',
                'verbose_name_plural': 'Проверяемые комментарии к фотографиям',
            },
        ),
        migrations.CreateModel(
            name='ModeratedPost',
            fields=[
                ('description', models.TextField(blank=True, max_length=300, verbose_name='Описание')),
                ('verified', models.BooleanField(default=False, verbose_name='Проверено')),
                ('status', models.CharField(choices=[('P', 'Запись рассматривается'), ('D', 'Запись удалена'), ('R', 'Запись отвергнута')], default='P', max_length=5, verbose_name='Статус')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Проверяемая запись',
                'verbose_name_plural': 'Проверяемые записи',
            },
        ),
        migrations.CreateModel(
            name='ModeratedPostComment',
            fields=[
                ('description', models.TextField(blank=True, max_length=300, verbose_name='Описание')),
                ('verified', models.BooleanField(blank=True, default=False, verbose_name='Проверено')),
                ('status', models.CharField(choices=[('P', 'Комментарий рассматривается'), ('D', 'Комментарий удален'), ('R', 'Комментарий отвергнут')], default='P', max_length=5, verbose_name='Статус')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Проверяемый комментарий к записи',
                'verbose_name_plural': 'Проверяемые комментарии к записям',
            },
        ),
        migrations.CreateModel(
            name='ModeratedUser',
            fields=[
                ('description', models.TextField(blank=True, max_length=300, verbose_name='Описание')),
                ('verified', models.BooleanField(default=False, verbose_name='Проверено')),
                ('status', models.CharField(choices=[('P', 'На рассмотрении'), ('S', 'Объект заморожен'), ('B', 'Объект заблокирован'), ('BG', 'Объекту присвоен баннер'), ('R', 'Отвергнутый')], default='P', max_length=5, verbose_name='Статус')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='moderated_user', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Проверяемый пользователь',
                'verbose_name_plural': 'Проверяемые пользователи',
            },
        ),
        migrations.CreateModel(
            name='ModeratedVideo',
            fields=[
                ('description', models.TextField(blank=True, max_length=300, verbose_name='Описание')),
                ('verified', models.BooleanField(default=False, verbose_name='Проверено')),
                ('status', models.CharField(choices=[('P', 'Ролик рассматривается'), ('D', 'Ролик удален'), ('R', 'Ролик отвергнут')], default='P', max_length=5, verbose_name='Статус')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Проверяемый ролик',
                'verbose_name_plural': 'Проверяемые ролики',
            },
        ),
        migrations.CreateModel(
            name='ModeratedVideoComment',
            fields=[
                ('description', models.TextField(blank=True, max_length=300, verbose_name='Описание')),
                ('verified', models.BooleanField(default=False, verbose_name='Проверено')),
                ('status', models.CharField(choices=[('P', 'Ролик рассматривается'), ('D', 'Ролик удален'), ('R', 'Ролик отвергнут')], default='P', max_length=5, verbose_name='Статус')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Проверяемый комментарий к ролику',
                'verbose_name_plural': 'Проверяемые комментарии к роликам',
            },
        ),
        migrations.CreateModel(
            name='ModerationCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('title', models.CharField(max_length=64, verbose_name='Заголовок')),
                ('description', models.CharField(max_length=255, verbose_name='Описание')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('severity', models.CharField(choices=[('C', 'Критический'), ('H', 'Высокий'), ('M', 'Средний'), ('L', 'Низкий')], max_length=5, verbose_name='Строгость')),
            ],
            options={
                'verbose_name': 'Категория модерации',
                'verbose_name_plural': 'Категории модерации',
            },
        ),
        migrations.CreateModel(
            name='VideoUserStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(blank=True, choices=[('A', 'Администратор'), ('M', 'Модератор'), ('E', 'Редактор')], max_length=5, verbose_name='Уровень доступа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='video_user_staff', to=settings.AUTH_USER_MODEL, verbose_name='Особый пользователь')),
            ],
            options={
                'verbose_name': 'Полномочия в видеозаписях пользователей',
                'verbose_name_plural': 'Полномочия в видеозаписях пользователей',
            },
        ),
        migrations.CreateModel(
            name='VideoModerationReport',
            fields=[
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Описание')),
                ('type', models.CharField(choices=[('P', 'Порнография'), ('NC', 'Для взрослых'), ('B', 'Оскорбительное содержание'), ('F', 'Мошенничество'), ('D', 'Наркотики'), ('NM', 'Не нравственный контент'), ('AS', 'Продажа оружия'), ('V', 'Насилие'), ('PE', 'Призыв к травле'), ('SU', 'Призыв к суициду'), ('PA', 'Жестокое обращение c животными'), ('MI', 'Введение в заблуждение'), ('RH', 'Риторика ненависти'), ('EX', 'Экстремизм')], max_length=5, verbose_name='Тип нарушения')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_reports', to='managers.moderatedvideo', verbose_name='Объект')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_reporter', to=settings.AUTH_USER_MODEL, verbose_name='Репортер')),
            ],
            options={
                'verbose_name': 'Жалоба на ролик',
                'verbose_name_plural': 'Жалобы на ролики',
            },
        ),
        migrations.CreateModel(
            name='VideoCommentModerationReport',
            fields=[
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Описание')),
                ('type', models.CharField(choices=[('P', 'Порнография'), ('NC', 'Для взрослых'), ('B', 'Оскорбительное содержание'), ('F', 'Мошенничество'), ('D', 'Наркотики'), ('NM', 'Не нравственный контент'), ('AS', 'Продажа оружия'), ('V', 'Насилие'), ('PE', 'Призыв к травле'), ('SU', 'Призыв к суициду'), ('PA', 'Жестокое обращение c животными'), ('MI', 'Введение в заблуждение'), ('RH', 'Риторика ненависти'), ('EX', 'Экстремизм')], max_length=5, verbose_name='Тип нарушения')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_comment_reports', to='managers.moderatedvideocomment', verbose_name='Объект')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_comment_reporter', to=settings.AUTH_USER_MODEL, verbose_name='Репортер')),
            ],
            options={
                'verbose_name': 'Жалоба на комментрий к ролику',
                'verbose_name_plural': 'Жалобы на комментрий к роликам',
            },
        ),
        migrations.CreateModel(
            name='UserStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(blank=True, choices=[('A', 'Администратор'), ('M', 'Модератор'), ('E', 'Редактор'), ('R', 'Рекламодатель')], max_length=5, verbose_name='Уровень доступа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_staff', to=settings.AUTH_USER_MODEL, verbose_name='Особый пользователь')),
            ],
            options={
                'verbose_name': 'Полномочия в профиле',
                'verbose_name_plural': 'Полномочия в профиле',
            },
        ),
        migrations.CreateModel(
            name='UserModerationReport',
            fields=[
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Описание')),
                ('type', models.CharField(choices=[('P', 'Порнография'), ('NC', 'Для взрослых'), ('S', 'Рассылка спама'), ('B', 'Оскорбительное поведение'), ('F', 'Мошенничество'), ('K', 'Клон моей страницы'), ('OP', 'Моя старая страница'), ('D', 'Наркотики'), ('NM', 'Не нравственный контент'), ('RH', 'Риторика ненависти'), ('U', 'Неэтичное поведение')], max_length=5, verbose_name='Тип нарушения')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_reports', to='managers.moderateduser', verbose_name='Объект')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_reporter', to=settings.AUTH_USER_MODEL, verbose_name='Репортер')),
            ],
            options={
                'verbose_name': 'Жалоба на пользователя',
                'verbose_name_plural': 'Жалобы на пользователей',
            },
        ),
        migrations.CreateModel(
            name='PostUserStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(blank=True, choices=[('A', 'Администратор'), ('M', 'Модератор'), ('E', 'Редактор')], max_length=5, verbose_name='Уровень доступа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='post_user_staff', to=settings.AUTH_USER_MODEL, verbose_name='Особый пользователь')),
            ],
            options={
                'verbose_name': 'Полномочия в постах пользователей',
                'verbose_name_plural': 'Полномочия в постах пользователей',
            },
        ),
        migrations.CreateModel(
            name='PostModerationReport',
            fields=[
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Описание')),
                ('type', models.CharField(choices=[('P', 'Порнография'), ('NC', 'Для взрослых'), ('B', 'Оскорбительное содержание'), ('F', 'Мошенничество'), ('D', 'Наркотики'), ('NM', 'Не нравственный контент'), ('AS', 'Продажа оружия'), ('V', 'Насилие'), ('PE', 'Призыв к травле'), ('SU', 'Призыв к суициду'), ('PA', 'Жестокое обращение c животными'), ('MI', 'Введение в заблуждение'), ('RH', 'Риторика ненависти'), ('EX', 'Экстремизм')], max_length=5, verbose_name='Тип нарушения')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_reports', to='managers.moderatedpost', verbose_name='Объект')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_reporter', to=settings.AUTH_USER_MODEL, verbose_name='Репортер')),
            ],
            options={
                'verbose_name': 'Жалоба на запись',
                'verbose_name_plural': 'Жалобы на записи',
            },
        ),
        migrations.CreateModel(
            name='PostCommentModerationReport',
            fields=[
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Описание')),
                ('type', models.CharField(choices=[('P', 'Порнография'), ('NC', 'Для взрослых'), ('B', 'Оскорбительное содержание'), ('F', 'Мошенничество'), ('D', 'Наркотики'), ('NM', 'Не нравственный контент'), ('AS', 'Продажа оружия'), ('V', 'Насилие'), ('PE', 'Призыв к травле'), ('SU', 'Призыв к суициду'), ('PA', 'Жестокое обращение c животными'), ('MI', 'Введение в заблуждение'), ('RH', 'Риторика ненависти'), ('EX', 'Экстремизм')], max_length=5, verbose_name='Тип нарушения')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_comment_reports', to='managers.moderatedpostcomment', verbose_name='Объект')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_comment_reporter', to=settings.AUTH_USER_MODEL, verbose_name='Репортер')),
            ],
            options={
                'verbose_name': 'Жалоба на комментрий к записи',
                'verbose_name_plural': 'Жалобы на комментрий к записям',
            },
        ),
        migrations.CreateModel(
            name='PhotoUserStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(blank=True, choices=[('A', 'Администратор'), ('M', 'Модератор'), ('E', 'Редактор')], max_length=5, verbose_name='Уровень доступа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='photo_user_staff', to=settings.AUTH_USER_MODEL, verbose_name='Особый пользователь')),
            ],
            options={
                'verbose_name': 'Полномочия в фотографиях пользователей',
                'verbose_name_plural': 'Полномочия в фотографиях пользователей',
            },
        ),
        migrations.CreateModel(
            name='PhotoModerationReport',
            fields=[
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Описание')),
                ('type', models.CharField(choices=[('P', 'Порнография'), ('NC', 'Для взрослых'), ('B', 'Оскорбительное содержание'), ('F', 'Мошенничество'), ('D', 'Наркотики'), ('NM', 'Не нравственный контент'), ('AS', 'Продажа оружия'), ('V', 'Насилие'), ('PE', 'Призыв к травле'), ('SU', 'Призыв к суициду'), ('PA', 'Жестокое обращение c животными'), ('MI', 'Введение в заблуждение'), ('RH', 'Риторика ненависти'), ('EX', 'Экстремизм')], max_length=5, verbose_name='Тип нарушения')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_reports', to='managers.moderatedphoto', verbose_name='Объект')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_reporter', to=settings.AUTH_USER_MODEL, verbose_name='Репортер')),
            ],
            options={
                'verbose_name': 'Жалоба на фотографию',
                'verbose_name_plural': 'Жалобы на фотографии',
            },
        ),
        migrations.CreateModel(
            name='PhotoCommentModerationReport',
            fields=[
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Описание')),
                ('type', models.CharField(choices=[('P', 'Порнография'), ('NC', 'Для взрослых'), ('B', 'Оскорбительное содержание'), ('F', 'Мошенничество'), ('D', 'Наркотики'), ('NM', 'Не нравственный контент'), ('AS', 'Продажа оружия'), ('V', 'Насилие'), ('PE', 'Призыв к травле'), ('SU', 'Призыв к суициду'), ('PA', 'Жестокое обращение c животными'), ('MI', 'Введение в заблуждение'), ('RH', 'Риторика ненависти'), ('EX', 'Экстремизм')], max_length=5, verbose_name='Тип нарушения')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_comment_reports', to='managers.moderatedphotocomment', verbose_name='Объект')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_comment_reporter', to=settings.AUTH_USER_MODEL, verbose_name='Репортер')),
            ],
            options={
                'verbose_name': 'Жалоба на комментрий к фотографии',
                'verbose_name_plural': 'Жалобы на комментрий к фотографиям',
            },
        ),
        migrations.CreateModel(
            name='ModerationPenaltyVideoComment',
            fields=[
                ('type', models.CharField(choices=[('D', 'Удалено')], max_length=5, verbose_name='Тип')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_video_comment_penalties', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_comment_moderated_object', to='managers.moderatedvideocomment', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Оштрафованный комментарий к ролику',
                'verbose_name_plural': 'Оштрафованные комментарии к роликам',
            },
        ),
        migrations.CreateModel(
            name='ModerationPenaltyVideo',
            fields=[
                ('type', models.CharField(choices=[('D', 'Удалено')], max_length=5, verbose_name='Тип')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_video_penalties', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_moderated_object', to='managers.moderatedvideo', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Оштрафованный ролик',
                'verbose_name_plural': 'Оштрафованные ролики',
            },
        ),
        migrations.CreateModel(
            name='ModerationPenaltyUser',
            fields=[
                ('expiration', models.DateTimeField(null=True, verbose_name='Окончание')),
                ('type', models.CharField(choices=[('S', 'Приостановлено'), ('B', 'Заблокировано'), ('BA', 'Вывешен баннер')], max_length=5, verbose_name='Тип')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_manager_penalties', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_moderated_object', to='managers.moderateduser', verbose_name='Объект')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_penalties', to=settings.AUTH_USER_MODEL, verbose_name='Оштрафованный пользователь')),
            ],
            options={
                'verbose_name': 'Оштрафованный пользователь',
                'verbose_name_plural': 'Оштрафованные пользователи',
            },
        ),
        migrations.CreateModel(
            name='ModerationPenaltyPostComment',
            fields=[
                ('type', models.CharField(choices=[('D', 'Удалено')], max_length=5, verbose_name='Тип')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_post_comment_penalties', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_comment_moderated_object', to='managers.moderatedpostcomment', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Оштрафованный комментарий к записи',
                'verbose_name_plural': 'Оштрафованные комментарии к записям',
            },
        ),
        migrations.CreateModel(
            name='ModerationPenaltyPost',
            fields=[
                ('type', models.CharField(choices=[('D', 'Удалено')], max_length=5, verbose_name='Тип')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_post_penalties', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_moderated_object', to='managers.moderatedpost', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Оштрафованная запись',
                'verbose_name_plural': 'Оштрафованные записи',
            },
        ),
        migrations.CreateModel(
            name='ModerationPenaltyPhotoComment',
            fields=[
                ('type', models.CharField(choices=[('D', 'Удалено')], max_length=5, verbose_name='Тип')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_photo_comment_penalties', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_comment_moderated_object', to='managers.moderatedphotocomment', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Оштрафованный комментарий к фотографии',
                'verbose_name_plural': 'Оштрафованные комментарии к фотографиям',
            },
        ),
        migrations.CreateModel(
            name='ModerationPenaltyPhoto',
            fields=[
                ('type', models.CharField(choices=[('D', 'Удалено')], max_length=5, verbose_name='Тип')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_photo_penalties', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_moderated_object', to='managers.moderatedphoto', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Оштрафованная фотография',
                'verbose_name_plural': 'Оштрафованные фотографии',
            },
        ),
        migrations.CreateModel(
            name='ModerationPenaltyGoodComment',
            fields=[
                ('type', models.CharField(choices=[('D', 'Удалено')], max_length=5, verbose_name='Тип')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_good_comment_penalties', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='good_comment_moderated_object', to='managers.moderatedgoodcomment', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Оштрафованный комментарий к товару',
                'verbose_name_plural': 'Оштрафованные комментарии к товарам',
            },
        ),
        migrations.CreateModel(
            name='ModerationPenaltyGood',
            fields=[
                ('type', models.CharField(choices=[('D', 'Удалено')], max_length=5, verbose_name='Тип')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_good_penalties', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='good_moderated_object', to='managers.moderatedgood', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Оштрафованный товар',
                'verbose_name_plural': 'Оштрафованные товары',
            },
        ),
        migrations.CreateModel(
            name='ModerationPenaltyCommunity',
            fields=[
                ('expiration', models.DateTimeField(null=True, verbose_name='Окончание')),
                ('type', models.CharField(choices=[('S', 'Приостановлено'), ('B', 'Заблокировано'), ('BA', 'Вывешен баннер')], max_length=5, verbose_name='Тип')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_penalties', to='communities.community', verbose_name='Оштрафованный сообщество')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_manager_penalties', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_moderated_object', to='managers.moderatedcommunity', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Оштрафованное сообщество',
                'verbose_name_plural': 'Оштрафованные сообщества',
            },
        ),
        migrations.CreateModel(
            name='ModerationPenaltyAudio',
            fields=[
                ('type', models.CharField(choices=[('D', 'Удалено')], max_length=5, verbose_name='Тип')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_audio_penalties', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audio_moderated_object', to='managers.moderatedaudio', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Оштрафованный трек',
                'verbose_name_plural': 'Оштрафованные треки',
            },
        ),
        migrations.CreateModel(
            name='GoodUserStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(blank=True, choices=[('A', 'Администратор'), ('M', 'Модератор'), ('E', 'Редактор')], max_length=5, verbose_name='Уровень доступа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='good_user_staff', to=settings.AUTH_USER_MODEL, verbose_name='Особый пользователь')),
            ],
            options={
                'verbose_name': 'Полномочия в товарах пользователей',
                'verbose_name_plural': 'Полномочия в товарах пользователей',
            },
        ),
        migrations.CreateModel(
            name='GoodModerationReport',
            fields=[
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Описание')),
                ('type', models.CharField(choices=[('P', 'Порнография'), ('NC', 'Для взрослых'), ('B', 'Оскорбительное содержание'), ('F', 'Мошенничество'), ('D', 'Наркотики'), ('NM', 'Не нравственный контент'), ('AS', 'Продажа оружия'), ('V', 'Насилие'), ('PE', 'Призыв к травле'), ('SU', 'Призыв к суициду'), ('PA', 'Жестокое обращение c животными'), ('MI', 'Введение в заблуждение'), ('RH', 'Риторика ненависти'), ('EX', 'Экстремизм')], max_length=5, verbose_name='Тип нарушения')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='good_reports', to='managers.moderatedgood', verbose_name='Объект')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='good_reporter', to=settings.AUTH_USER_MODEL, verbose_name='Репортер')),
            ],
            options={
                'verbose_name': 'Жалоба на товар',
                'verbose_name_plural': 'Жалобы на товары',
            },
        ),
        migrations.CreateModel(
            name='GoodCommentModerationReport',
            fields=[
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Описание')),
                ('type', models.CharField(choices=[('P', 'Порнография'), ('NC', 'Для взрослых'), ('B', 'Оскорбительное содержание'), ('F', 'Мошенничество'), ('D', 'Наркотики'), ('NM', 'Не нравственный контент'), ('AS', 'Продажа оружия'), ('V', 'Насилие'), ('PE', 'Призыв к травле'), ('SU', 'Призыв к суициду'), ('PA', 'Жестокое обращение c животными'), ('MI', 'Введение в заблуждение'), ('RH', 'Риторика ненависти'), ('EX', 'Экстремизм')], max_length=5, verbose_name='Тип нарушения')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='good_comment_reports', to='managers.moderatedgoodcomment', verbose_name='Объект')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='good_comment_reporter', to=settings.AUTH_USER_MODEL, verbose_name='Репортер')),
            ],
            options={
                'verbose_name': 'Жалоба на комментрий к товару',
                'verbose_name_plural': 'Жалобы на комментрий к товарам',
            },
        ),
        migrations.CreateModel(
            name='CommunityStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(blank=True, choices=[('A', 'Администратор'), ('M', 'Модератор'), ('E', 'Редактор'), ('R', 'Рекламодатель')], max_length=5, verbose_name='Уровень доступа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_community_staff', to=settings.AUTH_USER_MODEL, verbose_name='Особый пользователь')),
            ],
            options={
                'verbose_name': 'Полномочия в сообществе',
                'verbose_name_plural': 'Полномочия в сообществе',
            },
        ),
        migrations.CreateModel(
            name='CommunityModerationReport',
            fields=[
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Описание')),
                ('type', models.CharField(choices=[('P', 'Порнография'), ('NC', 'Для взрослых'), ('S', 'Рассылка спама'), ('B', 'Оскорбительное поведение'), ('F', 'Мошенничество'), ('D', 'Наркотики'), ('NM', 'Не нравственный контент'), ('RH', 'Риторика ненависти'), ('U', 'Неэтичный контент')], max_length=5, verbose_name='Тип нарушения')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_reports', to='managers.moderatedcommunity', verbose_name='Сообщество')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_reporter', to=settings.AUTH_USER_MODEL, verbose_name='Репортер')),
            ],
            options={
                'verbose_name': 'Жалоба на сообщество',
                'verbose_name_plural': 'Жалобы на сообщество',
            },
        ),
        migrations.CreateModel(
            name='CanWorkStaffVideoUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_work_administrator', models.BooleanField(default=False, verbose_name='Может добавлять администраторов видеозаписей')),
                ('can_work_moderator', models.BooleanField(default=False, verbose_name='Может добавлять модераторов видеозаписей')),
                ('can_work_editor', models.BooleanField(default=False, verbose_name='Может добавлять редакторов видеозаписей')),
                ('can_work_advertiser', models.BooleanField(default=False, verbose_name='Может добавлять рекламодателей видеозаписей')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='can_work_staff_video_user', to=settings.AUTH_USER_MODEL, verbose_name='Создатель персонала в видеозаписях')),
            ],
            options={
                'verbose_name': 'Создатель персонала видеозаписей',
                'verbose_name_plural': 'Создатели персонала видеозаписей',
            },
        ),
        migrations.CreateModel(
            name='CanWorkStaffUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_work_administrator', models.BooleanField(default=False, verbose_name='Может добавлять администраторов')),
                ('can_work_moderator', models.BooleanField(default=False, verbose_name='Может добавлять модераторов')),
                ('can_work_editor', models.BooleanField(default=False, verbose_name='Может добавлять редакторов')),
                ('can_work_advertiser', models.BooleanField(default=False, verbose_name='Может добавлять рекламодателей')),
                ('can_work_support', models.BooleanField(default=False, verbose_name='Может добавлять техподдержку')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='can_work_staff_user', to=settings.AUTH_USER_MODEL, verbose_name='Создатель персонала')),
            ],
            options={
                'verbose_name': 'Создатель персонала',
                'verbose_name_plural': 'Создатели персонала',
            },
        ),
        migrations.CreateModel(
            name='CanWorkStaffPostUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_work_administrator', models.BooleanField(default=False, verbose_name='Может добавлять администраторов записей')),
                ('can_work_moderator', models.BooleanField(default=False, verbose_name='Может добавлять модераторов записей')),
                ('can_work_editor', models.BooleanField(default=False, verbose_name='Может добавлять редакторов записей')),
                ('can_work_advertiser', models.BooleanField(default=False, verbose_name='Может добавлять рекламодателей записей')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='can_work_staff_post_user', to=settings.AUTH_USER_MODEL, verbose_name='Создатель персонала в записях')),
            ],
            options={
                'verbose_name': 'Создатель персонала записей',
                'verbose_name_plural': 'Создатели персонала записей',
            },
        ),
        migrations.CreateModel(
            name='CanWorkStaffPhotoUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_work_administrator', models.BooleanField(default=False, verbose_name='Может добавлять администраторов фотографий')),
                ('can_work_moderator', models.BooleanField(default=False, verbose_name='Может добавлять модераторов фотографий')),
                ('can_work_editor', models.BooleanField(default=False, verbose_name='Может добавлять редакторов фотографий')),
                ('can_work_advertiser', models.BooleanField(default=False, verbose_name='Может добавлять рекламодателей фотографий')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='can_work_staff_photo_user', to=settings.AUTH_USER_MODEL, verbose_name='Создатель персонала в фотографиях')),
            ],
            options={
                'verbose_name': 'Создатель персонала фотографий',
                'verbose_name_plural': 'Создатели персонала фотографий',
            },
        ),
        migrations.CreateModel(
            name='CanWorkStaffGoodUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_work_administrator', models.BooleanField(default=False, verbose_name='Может добавлять администраторов товаров')),
                ('can_work_moderator', models.BooleanField(default=False, verbose_name='Может добавлять модераторов товаров')),
                ('can_work_editor', models.BooleanField(default=False, verbose_name='Может добавлять редакторов товаров')),
                ('can_work_advertiser', models.BooleanField(default=False, verbose_name='Может добавлять рекламодателей товаров')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='can_work_staff_good_user', to=settings.AUTH_USER_MODEL, verbose_name='Создатель персонала в товарах')),
            ],
            options={
                'verbose_name': 'Создатель персонала товаров',
                'verbose_name_plural': 'Создатели персонала товаров',
            },
        ),
        migrations.CreateModel(
            name='CanWorkStaffCommunity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_work_administrator', models.BooleanField(default=False, verbose_name='Может добавлять администраторов')),
                ('can_work_moderator', models.BooleanField(default=False, verbose_name='Может добавлять модераторов')),
                ('can_work_editor', models.BooleanField(default=False, verbose_name='Может добавлять редакторов')),
                ('can_work_advertiser', models.BooleanField(default=False, verbose_name='Может добавлять рекламодателей')),
                ('can_work_support', models.BooleanField(default=False, verbose_name='Может добавлять техподдержку')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='can_work_staff_community', to=settings.AUTH_USER_MODEL, verbose_name='Создатель персонала')),
            ],
            options={
                'verbose_name': 'Создатель персонала сообщетсв',
                'verbose_name_plural': 'Создатели персонала сообщетсв',
            },
        ),
        migrations.CreateModel(
            name='CanWorkStaffAudioUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_work_administrator', models.BooleanField(default=False, verbose_name='Может добавлять администраторов аудиозаписей')),
                ('can_work_moderator', models.BooleanField(default=False, verbose_name='Может добавлять модераторов аудиозаписей')),
                ('can_work_editor', models.BooleanField(default=False, verbose_name='Может добавлять редакторов аудиозаписей')),
                ('can_work_advertiser', models.BooleanField(default=False, verbose_name='Может добавлять рекламодателей аудиозаписей')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='can_work_staff_audio_user', to=settings.AUTH_USER_MODEL, verbose_name='Создатель персонала в аудиозаписях')),
            ],
            options={
                'verbose_name': 'Создатель персонала аудиозаписей',
                'verbose_name_plural': 'Создатели персонала аудиозаписей',
            },
        ),
        migrations.CreateModel(
            name='AudioUserStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(blank=True, choices=[('A', 'Администратор'), ('M', 'Модератор'), ('E', 'Редактор')], max_length=5, verbose_name='Уровень доступа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='music_user_staff', to=settings.AUTH_USER_MODEL, verbose_name='Особый пользователь')),
            ],
            options={
                'verbose_name': 'Полномочия в аудиозаписях пользователей',
                'verbose_name_plural': 'Полномочия в аудиозаписях пользователей',
            },
        ),
        migrations.CreateModel(
            name='AudioModerationReport',
            fields=[
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Описание')),
                ('type', models.CharField(choices=[('P', 'Порнография'), ('NC', 'Для взрослых'), ('B', 'Оскорбительное содержание'), ('F', 'Мошенничество'), ('D', 'Наркотики'), ('NM', 'Не нравственный контент'), ('AS', 'Продажа оружия'), ('V', 'Насилие'), ('PE', 'Призыв к травле'), ('SU', 'Призыв к суициду'), ('PA', 'Жестокое обращение c животными'), ('MI', 'Введение в заблуждение'), ('RH', 'Риторика ненависти'), ('EX', 'Экстремизм')], max_length=5, verbose_name='Тип нарушения')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('moderated_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audio_reports', to='managers.moderatedaudio', verbose_name='Объект')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audio_reporter', to=settings.AUTH_USER_MODEL, verbose_name='Репортер')),
            ],
            options={
                'verbose_name': 'Жалоба на трек',
                'verbose_name_plural': 'Жалобы на треки',
            },
        ),
    ]
