# Generated by Django 2.2.5 on 2019-11-30 13:20

from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('common', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, verbose_name='uuid')),
                ('comments_enabled', models.BooleanField(default=True, verbose_name='Разрешить комментарии')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('is_edited', models.BooleanField(default=False, verbose_name='Изменено')),
                ('is_closed', models.BooleanField(default=False, verbose_name='Закрыто')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удалено')),
                ('is_fixed', models.BooleanField(default=False, verbose_name='Закреплено')),
                ('is_repost', models.BooleanField(default=False, verbose_name='Это репост')),
                ('views', models.IntegerField(default=0, verbose_name='Просмотры')),
                ('status', models.CharField(choices=[('D', 'Черновик'), ('PG', 'Обработка'), ('P', 'Опубликована'), ('A', 'Архивирована')], default='P', max_length=2, verbose_name='Статус статьи')),
                ('creator', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='items', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='thread', to='main.Item')),
                ('votes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_query_name='items_vote', to='common.ItemVotes')),
            ],
            options={
                'verbose_name': 'запись',
                'verbose_name_plural': 'записи',
            },
        ),
        migrations.CreateModel(
            name='ItemComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('is_edited', models.BooleanField(default=False, verbose_name='Изменено')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удалено')),
                ('commenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Комментатор')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.Item')),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='main.ItemComment', verbose_name='Родительский комментарий')),
                ('votes', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_query_name='comments', to='common.ItemCommentVotes')),
            ],
            options={
                'verbose_name': 'комментарий к записи',
                'verbose_name_plural': 'комментарии к записи',
            },
        ),
        migrations.CreateModel(
            name='TopPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(db_index=True, editable=False)),
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='top_post', to='main.Item')),
            ],
        ),
        migrations.CreateModel(
            name='ItemMute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mutes', to='main.Item')),
                ('muter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_mutes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('item', 'muter')},
            },
        ),
        migrations.CreateModel(
            name='ItemCommentMute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mutes', to='main.ItemComment')),
                ('muter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_comment_mutes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('item_comment', 'muter')},
            },
        ),
        migrations.AddIndex(
            model_name='itemcomment',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='main_itemco_created_ca7994_brin'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='main_item_created_848de4_brin'),
        ),
    ]
