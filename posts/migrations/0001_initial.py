# Generated by Django 3.1.5 on 2021-03-11 13:39

from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('communities', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, verbose_name='uuid')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Создан')),
                ('status', models.CharField(choices=[('D', 'Черновик'), ('PG', 'Обработка'), ('P', 'Опубликована'), ('MP', 'Репост в сообщения'), ('PR', 'Репост фотографии'), ('PAR', 'Репост фотоальбома'), ('GR', 'Репост товара'), ('GLR', 'Репост списка товаров'), ('MR', 'Репост аудиозаписи'), ('MLR', 'Репост плейлиста аудиозаписей'), ('DR', 'Репост документа'), ('DLR', 'Репост списка документов'), ('VR', 'Репост видеозаписи'), ('VLR', 'Репост списка видеозаписей'), ('UR', 'Репост пользователя'), ('CR', 'Репост сообщества')], default='PG', max_length=5, verbose_name='Статус статьи')),
                ('text', models.TextField(blank=True, max_length=5000, verbose_name='Текст')),
                ('comments_enabled', models.BooleanField(default=True, verbose_name='Разрешить комментарии')),
                ('is_signature', models.BooleanField(default=True, verbose_name='Подпись автора')),
                ('votes_on', models.BooleanField(default=True, verbose_name='Реакции разрешены')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удален')),
                ('attach', models.CharField(blank=True, max_length=200, verbose_name='Прикрепленные элементы')),
            ],
            options={
                'verbose_name': 'Запись',
                'verbose_name_plural': 'Записи',
            },
        ),
        migrations.CreateModel(
            name='PostCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Тематика')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Порядковый номер')),
            ],
            options={
                'verbose_name': 'Тематика постов',
                'verbose_name_plural': 'Тематики постов',
            },
        ),
        migrations.CreateModel(
            name='PostList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('MA', 'Основной список'), ('LI', 'Пользовательский список'), ('PR', 'Приватный список'), ('DE', 'Архивный список'), ('FI', 'Закрепленный список')], default='LI', max_length=5, verbose_name='Тип листа')),
                ('order', models.PositiveIntegerField(default=1)),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удален')),
                ('community', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='community_postlist', to='communities.community', verbose_name='Сообщество')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_postlist', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'список записей',
                'verbose_name_plural': 'списки записей',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField(blank=True)),
                ('is_edited', models.BooleanField(default=False, verbose_name='Изменено')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удалено')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('attach', models.CharField(blank=True, max_length=200, verbose_name='Прикрепленные элементы')),
                ('commenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Комментатор')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='posts.postcomment', verbose_name='Родительский комментарий')),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.post')),
            ],
            options={
                'verbose_name': 'комментарий к записи',
                'verbose_name_plural': 'комментарии к записи',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='posts.postcategory', verbose_name='Тематика'),
        ),
        migrations.AddField(
            model_name='post',
            name='community',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_community', to='communities.community', verbose_name='Сообщество'),
        ),
        migrations.AddField(
            model_name='post',
            name='creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_creator', to=settings.AUTH_USER_MODEL, verbose_name='Создатель'),
        ),
        migrations.AddField(
            model_name='post',
            name='list',
            field=models.ManyToManyField(related_name='post_list', to='posts.PostList'),
        ),
        migrations.AddField(
            model_name='post',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='thread', to='posts.post'),
        ),
        migrations.AddIndex(
            model_name='postcomment',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='posts_postc_created_3ec60a_brin'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='posts_post_created_6d8810_brin'),
        ),
    ]
